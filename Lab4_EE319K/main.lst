


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: **-UUU-*Your Names**update this***
                       
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 1/18/2019
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ;   If the input PA4 is low, the stepper motor outputs c
                       ycle 10,6,5,9,...
    9 00000000         ;   If the input PA4 is high, the stepper motor outputs 
                       cycle 5,6,10,9,...
   10 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   11 00000000         ;   to verify that the system is functioning as expected
                       .
   12 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   13 00000000         ;  PA4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   14 00000000         ;  PE3-0 are stepper motor outputs 
   15 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   16 00000000         ; Instrumentation data to be gathered is as follows:
   17 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   18 00000000         ; The state information is the 5 bits on Port A bit 4 an
                       d Port E PE3-0
   19 00000000         ;   place one 8-bit entry in your Data Buffer  
   20 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   21 00000000         ;   place one 32-bit entry in the Time Buffer
   22 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   23 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   24 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   25 00000000         ;       entries you should stop collecting data
   26 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   27 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   28 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   29 00000000         
   30 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   31 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   32 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   33 00000000 40004400 
                       GPIO_PORTA_DIR_R



ARM Macro Assembler    Page 2 


                               EQU              0x40004400
   34 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   35 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   36 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   37 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   38 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   39 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         ; RAM Area
   42 00000000                 AREA             DATA, ALIGN=2
   43 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   44 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   45 00000008         
   46 00000008         ;place your debug variables in RAM here
   47 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuffer
                               SPACE            100
   48 0000006C         ;PAD1  SPACE 1
   49 0000006C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuffer
                               SPACE            400
   50 000001FC         ;PAD2  SPACE  4
   51 000001FC 00 00 00 
              00       Data_Pt SPACE            4
   52 00000200         ;PAD3  SPACE 4
   53 00000200 00 00 00 
              00       Time_Pt SPACE            4
   54 00000204         
   55 00000204         ; ROM Area
   56 00000204                 IMPORT           TExaS_Init
   57 00000204                 IMPORT           SysTick_Init
   58 00000204         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   59 00000204                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   60 00000000                 THUMB
   61 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   62 00000004                 EXPORT           Start
   63 00000004         
   64 00000004         Start
   65 00000004         ;Enable Port F
   66 00000004 4969            LDR              R1, =SYSCTL_RCGCGPIO_R
   67 00000006 6808            LDR              R0, [R1]
   68 00000008 F040 0020       ORR              R0, R0, #0x20 ; Clock for F
   69 0000000C 6008            STR              R0, [R1]
   70 0000000E BF00            NOP
   71 00000010 BF00            NOP
   72 00000012 4867            LDR              R0, =GPIO_PORTF_DIR_R
   73 00000014 6801            LDR              R1, [R0]
   74 00000016 F041 0102       ORR              R1, #0x02   ; Output on PF1
   75 0000001A 6001            STR              R1, [R0]
   76 0000001C 4865            LDR              R0, =GPIO_PORTF_DEN_R



ARM Macro Assembler    Page 6 


   77 0000001E 6801            LDR              R1, [R0]
   78 00000020 F041 0102       ORR              R1, #0x02   ; enable PF1
   79 00000024 6001            STR              R1, [R0]
   80 00000026         ; TExaS_Init sets bus clock at 80 MHz
   81 00000026         ; PA4, PE3-PE0 out logic analyzer to TExasDisplay
   82 00000026 4864            LDR              R0,=SendDataToLogicAnalyzer
   83 00000028 F040 0001       ORR              R0,R0,#1
   84 0000002C F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   85 00000030         ;place your initializations here
   86 00000030 F000 F824       BL               Stepper_Init ; initialize stepp
                                                            er motor
   87 00000034 F000 F83C       BL               Switch_Init ; initialize switch
                                                             input
   88 00000038         ;**********************
   89 00000038 F000 F85F       BL               Debug_Init  ;(you write this)
   90 0000003C         ;**********************
   91 0000003C B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   92 0000003E F04F 0500       MOV              R5,#0       ; last PA4
   93 00000042         loop
   94 00000042 485E            LDR              R0,=GPIO_PORTF_DATA_R
   95 00000044 6801            LDR              R1, [R0]
   96 00000046 F081 0102       EOR              R1, #0x02
   97 0000004A 6001            STR              R1, [R0]
   98 0000004C 495C            LDR              R1,=GPIO_PORTA_DATA_R
   99 0000004E 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
  100 00000050 F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
  101 00000054 2C00            CMP              R4,#0
  102 00000056 D00A            BEQ              no          ; skip if not pushe
                                                            d
  103 00000058 2D00            CMP              R5,#0
  104 0000005A D108            BNE              no          ; skip if pushed la
                                                            st time
  105 0000005C         ; this time yes, last time no
  106 0000005C 4959            LDR              R1,=Direction
  107 0000005E 6808            LDR              R0,[R1]     ; current direction
                                                            
  108 00000060 F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
  109 00000064 2802            CMP              R0,#2
  110 00000066 D101            BNE              ok
  111 00000068 F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
  112 0000006C 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
  113 0000006E 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me
  114 00000070 F000 F830       BL               Stepper_Step
  115 00000074 4854            LDR              R0,=1600000
  116 00000076 F000 F83D       BL               Wait        ; time delay fixed 
                                                            but not accurate   
                                                            
  117 0000007A E7E2            B                loop
  118 0000007C         ;Initialize stepper motor interface
  119 0000007C         Stepper_Init
  120 0000007C F04F 0001       MOV              R0,#1



ARM Macro Assembler    Page 7 


  121 00000080 4950            LDR              R1,=Direction
  122 00000082 6008            STR              R0,[R1]     ; Direction=0 (CW)
  123 00000084 F04F 0000       MOV              R0,#0
  124 00000088 4950            LDR              R1,=Index
  125 0000008A 6008            STR              R0,[R1]     ; Index=0
  126 0000008C         ; activate clock for Port E
  127 0000008C 4947            LDR              R1, =SYSCTL_RCGCGPIO_R
  128 0000008E 6808            LDR              R0, [R1]
  129 00000090 F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  130 00000094 6008            STR              R0, [R1]
  131 00000096 BF00            NOP
  132 00000098 BF00            NOP                          ; allow time to fin
                                                            ish activating
  133 0000009A         ; set direction register
  134 0000009A 494D            LDR              R1, =GPIO_PORTE_DIR_R
  135 0000009C 6808            LDR              R0, [R1]
  136 0000009E F040 000F       ORR              R0, R0, #0x0F 
                                                            ; Output on PE0-PE3
                                                            
  137 000000A2 6008            STR              R0, [R1]
  138 000000A4         ; enable digital port
  139 000000A4 494B            LDR              R1, =GPIO_PORTE_DEN_R
  140 000000A6 6808            LDR              R0, [R1]
  141 000000A8 F040 000F       ORR              R0, R0, #0x0F ; enable PE3-0
  142 000000AC 6008            STR              R0, [R1]
  143 000000AE 4770            BX               LR
  144 000000B0         ;Initialize switch interface
  145 000000B0         Switch_Init
  146 000000B0         ; activate clock for Port A
  147 000000B0 493E            LDR              R1, =SYSCTL_RCGCGPIO_R
  148 000000B2 6808            LDR              R0, [R1]
  149 000000B4 F040 0001       ORR              R0, R0, #0x01 ; Clock for A
  150 000000B8 6008            STR              R0, [R1]
  151 000000BA BF00            NOP
  152 000000BC BF00            NOP                          ; allow time to fin
                                                            ish activating
  153 000000BE         ; set direction register
  154 000000BE 4946            LDR              R1, =GPIO_PORTA_DIR_R
  155 000000C0 6808            LDR              R0, [R1]
  156 000000C2 F020 0010       BIC              R0, R0, #0x10 ; Input on PA4
  157 000000C6 6008            STR              R0, [R1]
  158 000000C8         ; 5) enable digital port
  159 000000C8 4944            LDR              R1, =GPIO_PORTA_DEN_R
  160 000000CA 6808            LDR              R0, [R1]
  161 000000CC F040 0010       ORR              R0, R0, #0x10 ; enable PA4
  162 000000D0 6008            STR              R0, [R1]
  163 000000D2 4770            BX               LR
  164 000000D4         ; Step the motor clockwise
  165 000000D4         ; Direction determines the rotational direction
  166 000000D4         ; Input: None
  167 000000D4         ; Output: None
  168 000000D4         Stepper_Step
  169 000000D4 B510            PUSH             {R4,LR}
  170 000000D6 493D            LDR              R1,=Index
  171 000000D8 680A            LDR              R2,[R1]     ; old Index
  172 000000DA 4B3A            LDR              R3,=Direction
  173 000000DC 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  174 000000DE 4402            ADD              R2,R2,R0



ARM Macro Assembler    Page 8 


  175 000000E0 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  176 000000E4 600A            STR              R2,[R1]     ; new Index
  177 000000E6 4B3E            LDR              R3,=Stepper ; table
  178 000000E8 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  179 000000EA 493E            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  180 000000EC 6008            STR              R0,[R1]
  181 000000EE F000 F823       BL               Debug_Capture
  182 000000F2 BD10            POP              {R4,PC}
  183 000000F4         ; inaccurate and inefficient time delay
  184 000000F4         Wait
  185 000000F4 1E40            SUBS             R0,R0,#1    ; outer loop
  186 000000F6 D1FD            BNE              Wait
  187 000000F8 4770            BX               LR
  188 000000FA         
  189 000000FA         Debug_Init
  190 000000FA B51F            PUSH             {R0-R4,LR}
  191 000000FC         
  192 000000FC         
  193 000000FC F7FF FFFE       BL               SysTick_Init
  194 00000100 4839            LDR              R0, =DataBuffer
  195 00000102 F04F 0200       MOV              R2, #0
  196 00000106         Dloop                                ;Set all entries of
                                                             DataBuffer to 0xFF
                                                            
  197 00000106 F04F 04FF       MOV              R4, #0xFF
  198 0000010A 5484            STRB             R4, [R0,R2]
  199 0000010C F102 0201       ADD              R2, #1
  200 00000110 2A63            CMP              R2, #99
  201 00000112 D9F8            BLS              Dloop
  202 00000114 4935            LDR              R1, =Data_Pt
  203 00000116 4834            LDR              R0, =DataBuffer
  204 00000118 6008            STR              R0, [R1]
  205 0000011A 4835            LDR              R0, =TimeBuffer
  206 0000011C F04F 0200       MOV              R2, #0
  207 00000120         Tloop                                ;Set all entries of
                                                             TimeBuffer to 0xFF
                                                            FFFFFF
  208 00000120 F04F 34FF       MOV              R4, #0xFFFFFFFF
  209 00000124 5084            STR              R4, [R0,R2]
  210 00000126 F102 0204       ADD              R2, #4
  211 0000012A F5B2 7FC6       CMP              R2, #396
  212 0000012E D9F7            BLS              Tloop
  213 00000130 4930            LDR              R1, =Time_Pt
  214 00000132 482F            LDR              R0, =TimeBuffer
  215 00000134 6008            STR              R0, [R1]
  216 00000136         
  217 00000136 BD1F            POP              {R0-R4,PC}
  218 00000138         
  219 00000138         ;Debug capture      
  220 00000138         Debug_Capture
  221 00000138 B57F            PUSH             {R0-R6,LR}
  222 0000013A         
  223 0000013A         
  224 0000013A 482B            LDR              R0, =DataBuffer
  225 0000013C F890 1063       LDRB             R1, [R0, #99]
  226 00000140 29FF            CMP              R1, #0xFF



ARM Macro Assembler    Page 9 


  227 00000142 D126            BNE              Done
  228 00000144 482A            LDR              R0, =TimeBuffer
  229 00000146 F8D0 118C       LDR              R1, [R0, #396]
  230 0000014A F1B1 3FFF       CMP              R1, #0xFFFFFFFF
  231 0000014E D120            BNE              Done
  232 00000150         
  233 00000150 4828            LDR              R0, =Time_Pt
  234 00000152 6801            LDR              R1, [R0]    ;R1=Time pointer
  235 00000154 4A28            LDR              R2, =NVIC_ST_CURRENT_R
  236 00000156 6812            LDR              R2, [R2]    ;R2=Time
  237 00000158         ;AND R2, #0x00FFFFFF
  238 00000158 F1A1 0304       SUB              R3, R1, #4
  239 0000015C 681B            LDR              R3, [R3]
  240 0000015E F023 437F       AND              R3, #0x00FFFFFF
  241 00000162 EBA3 0302       SUB              R3, R2
  242 00000166 F023 437F       AND              R3, #0x00FFFFFF
  243 0000016A 600B            STR              R3, [R1]
  244 0000016C F101 0104       ADD              R1, #4      ;Increment Pointer 
                                                            by 16 (32 bit array
                                                            )
  245 00000170 6001            STR              R1, [R0]
  246 00000172         
  247 00000172 481E            LDR              R0, =Data_Pt
  248 00000174 6801            LDR              R1, [R0]    ;R1=Data pointer
  249 00000176 4A1B            LDR              R2, =GPIO_PORTE_DATA_R
  250 00000178 6812            LDR              R2, [R2]    ;R2=PORT E Data
  251 0000017A F002 020F       AND              R2, #0x0F   ;Clear other bits
  252 0000017E 4B10            LDR              R3, =GPIO_PORTA_DATA_R
  253 00000180 681B            LDR              R3, [R3]
  254 00000182 F003 0310       AND              R3, #0x10
  255 00000186 EA42 0203       ORR              R2, R3
  256 0000018A 700A            STRB             R2, [R1]
  257 0000018C F101 0101       ADD              R1, #1      ;Increment pointer 
                                                            by 4 (8 bit array)
  258 00000190 6001            STR              R1, [R0]
  259 00000192         
  260 00000192 BD7F    Done    POP              {R0-R6,PC}
  261 00000194         
  262 00000194         ; edit the following only if you need to move pins from 
                       PA4, PE3-0      
  263 00000194         ; logic analyzer on the real board
  264 00000194 40004040 
                       PA4     equ              0x40004040
  265 00000194 4002403C 
                       PE30    equ              0x4002403C
  266 00000194 4000C000 
                       UART0_DR_R
                               equ              0x4000C000
  267 00000194         SendDataToLogicAnalyzer
  268 00000194 4919            LDR              R1,=PA4
  269 00000196 6809            LDR              R1,[R1]     ; read PA4
  270 00000198 4819            LDR              R0,=PE30    ; read PE3-PE0
  271 0000019A 6800            LDR              R0,[R0]
  272 0000019C EA40 0001       ORR              R0,R0,R1    ;combine into one 5
                                                            -bit value
  273 000001A0 F040 0080       ORR              R0,R0,#0x80
  274 000001A4 4917            LDR              R1,=UART0_DR_R
  275 000001A6 6008            STR              R0,[R1]     ; send data at 10 k
                                                            Hz



ARM Macro Assembler    Page 10 


  276 000001A8 4770            BX               LR
  277 000001AA         
  278 000001AA         
  279 000001AA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  280 000001AC                 END                          ; end of file
              400FE608 
              40025400 
              4002551C 
              00000000 
              400253FC 
              400043FC 
              00000000 
              00186A00 
              00000000 
              40024400 
              4002451C 
              40004400 
              4000451C 
              00000000 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              40004040 
              4002403C 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inclu
de\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526"
 --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst
 main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000008

Symbol: DataBuffer
   Definitions
      At line 47 in file main.s
   Uses
      At line 194 in file main.s
      At line 203 in file main.s
      At line 224 in file main.s

Data_Pt 000001FC

Symbol: Data_Pt
   Definitions
      At line 51 in file main.s
   Uses
      At line 202 in file main.s
      At line 247 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 44 in file main.s
   Uses
      At line 106 in file main.s
      At line 121 in file main.s
      At line 172 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 43 in file main.s
   Uses
      At line 124 in file main.s
      At line 170 in file main.s

TimeBuffer 0000006C

Symbol: TimeBuffer
   Definitions
      At line 49 in file main.s
   Uses
      At line 205 in file main.s
      At line 214 in file main.s
      At line 228 in file main.s

Time_Pt 00000200

Symbol: Time_Pt



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 53 in file main.s
   Uses
      At line 213 in file main.s
      At line 233 in file main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000138

Symbol: Debug_Capture
   Definitions
      At line 220 in file main.s
   Uses
      At line 181 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000FA

Symbol: Debug_Init
   Definitions
      At line 189 in file main.s
   Uses
      At line 89 in file main.s
Comment: Debug_Init used once
Dloop 00000106

Symbol: Dloop
   Definitions
      At line 196 in file main.s
   Uses
      At line 201 in file main.s
Comment: Dloop used once
Done 00000192

Symbol: Done
   Definitions
      At line 260 in file main.s
   Uses
      At line 227 in file main.s
      At line 231 in file main.s

SendDataToLogicAnalyzer 00000194

Symbol: SendDataToLogicAnalyzer
   Definitions
      At line 267 in file main.s
   Uses
      At line 82 in file main.s
Comment: SendDataToLogicAnalyzer used once
Start 00000004

Symbol: Start
   Definitions
      At line 64 in file main.s
   Uses
      At line 62 in file main.s
Comment: Start used once
Stepper 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Stepper
   Definitions
      At line 61 in file main.s
   Uses
      At line 177 in file main.s
Comment: Stepper used once
Stepper_Init 0000007C

Symbol: Stepper_Init
   Definitions
      At line 119 in file main.s
   Uses
      At line 86 in file main.s
Comment: Stepper_Init used once
Stepper_Step 000000D4

Symbol: Stepper_Step
   Definitions
      At line 168 in file main.s
   Uses
      At line 114 in file main.s
Comment: Stepper_Step used once
Switch_Init 000000B0

Symbol: Switch_Init
   Definitions
      At line 145 in file main.s
   Uses
      At line 87 in file main.s
Comment: Switch_Init used once
Tloop 00000120

Symbol: Tloop
   Definitions
      At line 207 in file main.s
   Uses
      At line 212 in file main.s
Comment: Tloop used once
Wait 000000F4

Symbol: Wait
   Definitions
      At line 184 in file main.s
   Uses
      At line 116 in file main.s
      At line 186 in file main.s

loop 00000042

Symbol: loop
   Definitions
      At line 93 in file main.s
   Uses
      At line 117 in file main.s
Comment: loop used once
no 0000006E

Symbol: no
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 113 in file main.s
   Uses
      At line 102 in file main.s
      At line 104 in file main.s

ok 0000006C

Symbol: ok
   Definitions
      At line 112 in file main.s
   Uses
      At line 110 in file main.s
Comment: ok used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 98 in file main.s
      At line 252 in file main.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 159 in file main.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 154 in file main.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 179 in file main.s
      At line 249 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 139 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 134 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 94 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 72 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 235 in file main.s
Comment: NVIC_ST_CURRENT_R used once
PA4 40004040

Symbol: PA4
   Definitions
      At line 264 in file main.s
   Uses
      At line 268 in file main.s
Comment: PA4 used once
PE30 4002403C

Symbol: PE30
   Definitions
      At line 265 in file main.s
   Uses
      At line 270 in file main.s
Comment: PE30 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 66 in file main.s
      At line 127 in file main.s
      At line 147 in file main.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 266 in file main.s
   Uses
      At line 274 in file main.s
Comment: UART0_DR_R used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 193 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 84 in file main.s
Comment: TExaS_Init used once
2 symbols
375 symbols in table
